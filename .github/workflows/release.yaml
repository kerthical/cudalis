name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Enter the version (tag) to deploy'
        required: true

jobs:
  build:
    name: ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            dist: cudalis-windows-x86_64.zip

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            dist: cudalis-windows-arm.zip

          - os: macos-latest
            target: x86_64-apple-darwin
            dist: cudalis-macos-x86_64.zip

          - os: macos-latest
            target: aarch64-apple-darwin
            dist: cudalis-macos-arm.zip

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            dist: cudalis-linux-x86_64.zip

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            dist: cudalis-linux-arm.zip
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - run: sudo apt-get update -y && sudo apt-get install -y musl-tools
        shell: bash
        if: matrix.platform.os == 'ubuntu-latest'

      - uses: Swatinem/rust-cache@v2
      - run: |
          git config --global user.email "121681466+kerthical@users.noreply.github.com"
          git config --global user.name "kerthical"
        shell: bash

      - run: cargo build --locked --release --target ${{ matrix.platform.target }}
        shell: bash

      - run: |
          cd target/${{ matrix.platform.target }}/release
          if [ "${{ matrix.platform.os }}" = "windows-latest" ]; then
            7z a -tzip ${{ matrix.platform.dist }} cudalis.exe
          else
            zip ${{ matrix.platform.dist }} cudalis
          fi
          cd -
        shell: bash

      - uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.platform.target }}/release/${{ matrix.platform.dist }}
          tag_name: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
permissions:
  contents: write