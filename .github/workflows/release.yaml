name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Enter the version (tag) to deploy'
        required: true

jobs:
  build:
    name: ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: cudalis.exe
            name: cudalis-windows-x86_64.zip
          - os_name: Windows ARM
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: cudalis.exe
            name: cudalis-windows-arm.zip

          - os_name: macOS x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: cudalis
            name: cudalis-macos-x86_64.zip
          - os_name: macOS ARM
            os: macos-latest
            target: aarch64-apple-darwin
            bin: cudalis
            name: cudalis-macos-arm.zip

          - os_name: Linux x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: cudalis
            name: cudalis-linux-x86_64.zip
          - os_name: Linux ARM
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: cudalis
            name: cudalis-linux-arm.zip
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: |
          git config --global user.email "121681466+kerthical@users.noreply.github.com"
          git config --global user.name "kerthical"
      - run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config libudev-dev build-essential
        if: contains(matrix.platform.os_name, 'Linux')
      - uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: stable
          args: "--locked --release"
          strip: true
      - run: |
          cd target/${{ matrix.platform.target }}/release
          zip -r ${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.name }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.name }}

  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.platform.name }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.name }}
      - uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.platform.target }}/release/${{ matrix.platform.name }}
          tag_name: ${{ github.event.inputs.tag }}
          body: |
            # Changelog
            $(git log --format="* %s" $(git describe --tags --abbrev=0)..HEAD)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write